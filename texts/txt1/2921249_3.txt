<div><p>Even after installation (<a title="Arch From Scratch: (1) Installation" href="http://archlinux.me/axel668/2012/10/26/arch-from-scratch-1-installation/" target="_blank">see part 1</a>), the Arch system is still pretty basic. You can boot into text mode, connect to the internet with <em>wifi-menu</em> or even do some basic text browsing, but for a desktop system a very central part is still missing – the desktop. The 2nd part of my “Arch from Scratch” diary shows how to set up X and configure some hardware for my Asus 1215N (the process may be different on different hardware).</p>
<ol><li>The first step is of course to install X-Windows. If you don’t know exactly what hardware you have, you can just install the whole Xorg group with <em>pacman -S xorg</em>. This will install most drivers and allow Xorg to auto detect your hardware. To be able to do ANYTHING in X you will also need xorg-init and xterm, too. Now you should be able to ‘startx’ successfully from root into a naked XWindows with a couple of xterms.</li>
<li>You shouldn’t work as root of course, so now’s the time to create a new user with <em>adduser.</em> Some recommendations for groups can be found in the <a href="https://wiki.archlinux.org/index.php/User#User_groups" target="_blank">wiki</a>. For startx to work for the new user, I had to copy <em>/etc/X11/xinit/xinitrc</em> to <em>~/.xinitrc</em>.</li>
<li>While you’re at it, install <em>sudo</em> and enable it for your user (or the whole wheel group) – run <em>EXPORT EDITOR=nano; visudo</em> and uncomment the desired line in the config file</li>
<li>Add Firefox or Chromium and you already have a very basic work environment, allowing you to read Arch wiki and access the forum</li>
<li>For easy AUR access you want a tool like yaourt or packer - I used this <a href="http://stillstup.blogspot.de/2010/04/how-to-install-packer-in-arch.html" target="_blank">blog post</a> as a guide, but you can also check out the more <a href="https://wiki.archlinux.org/index.php/AUR#Installing_packages" target="_blank">general documentation</a> in the Arch wiki. Once this is done, you can simply search and install packages by typing e.g. <em>packer chrome</em> and then picking the number from the list.</li>
<li>To support my Nvidia Optimus graphics chip, I installed Bumblebee from the AUR by simply typing <em>packer bumblebee. </em>I didn’t have to change anything in the PKGBUILD files, but Arch wiki insists you should always have a look at them, to check if they really do what they seem (a malicious PKGBUILD could do serious harm to your computer). This will install <em>nvidia-utils-bumblebee</em> but not the Nvidia drivers and power management, so you have to install <em>nvidia</em> and <em>dkms-bbswitch</em> separately. After a reboot you should be able to run any program against your Nvidia chip with the <em>optirun</em> command.</li>
<li>For the automatic dkms rebuild to work properly after a kernel update, you have to change <em>/etc/bumblebee/bumblebee.conf</em> from <em>PMMETHOD=auto</em> to <em>PMMETHOD=bbswitch</em> (as described by Samsagax in a comment on the <a href="https://aur.archlinux.org/packages.php?ID=55798" target="_blank">AUR page</a>) and enable the DKMS service with <em>systemctl enable dkms</em> (more details <a href="https://wiki.archlinux.org/index.php/Dkms" target="_blank">here</a>) </li>
<li>Even though wifi was working with the included Kernel drivers, I experienced frequent disconnects with my BCM4013 wireless chip. After some research I finally resolved the issue by switching to the proprietary <em>dkms-broadcom-wl</em> driver from the AUR. To make sure broadcom-wl is really used, you should enable the kernel module <em>wl</em> and blacklist <em>b43</em>, <em>ssb</em> and <em>brcm80211</em> (as described in the <a href="https://wiki.archlinux.org/index.php/Kernel_modules" target="_blank">wiki</a>). Using broadcom-wl will switch the wireless device from wlan0 to eth0, so you have to change netcfg configurations accordingly and <em>wifi-menu</em> will not work anymore.</li>
<li>So this a good moment to install a network administration tool like wicd (don’t forget to configure the wireless device, usually wlan0 or eth0 – the easiest way to do this is in the preferences of the wicd-client took from package wicd-gtk)</li>
<li>
<div> Of course you could just install a desktop environment like XFCE (pacman -S xfce) or KDE now and be done with it, or start to create your own desktop environment with a window manager (like Openbox, Fluxbox, JWM, …)</div>
</li>
</ol><p>This concludes part 2 of my Arch diaries, in the next part I will describe how I created a simple, lightweight desktop environment based on the JWM window manager.</p></div>
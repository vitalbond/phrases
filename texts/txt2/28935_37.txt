<div><p>We are happy to announce a new release candidate for everyone to try out: <strong>3.13.0-rc-1</strong>. It is available through our CDN <a href="http://yui.yahooapis.com/3.13.0-rc-1/build/yui/yui-min.js">here</a>, downloadable via an <a href="http://yui.zenfs.com/releases/yui3/yui_3.13.0-rc-1.zip">archive</a>, and installable via <a href="https://npmjs.org/package/yui">npm</a>.</p>
<p>This release candidate is currently being tested across our <a href="http://yuilibrary.com/yui/environments/">target environments</a> and we&rsquo;re fixing any showstopper bugs. Check out the <a href="https://github.com/yui/yui3/wiki/Development-Schedule">release schedule</a> for more details. Please take this opportunity to try out this release candidate in your own test environments and <a href="https://github.com/yui/yui3/issues/new">file issues</a> if you run across anything that doesn&rsquo;t work the way you expect (please indicate which version you were testing when you file the issue).</p>
<h2>What&rsquo;s New In This Release</h2>
<p>We have a full plate of changes and improvements! The main focus of this release centered around improvements to the Rich Text Editor, but there are changes across the board reflecting the amazing activity of our YUI community. You can find them listed below.</p>
<h3>Rich Text Editor Improvements</h3>
<p>A major new feature for <a href="http://stage.yuilibrary.com/yui/docs/editor/">Editor</a> is the ability to work in one of two modes. The traditional mode was via an iframe element on a page, and this is not changed. A second new mode allows Editor to work as an inline editor on a page using ContentEditable. Due to this, some internal changes have been made. <code>Y.Frame</code> is now a plugin and it extends <code>Y.Plugin.Base</code>. There is a new Plugin called ContentEditable which allows the editor to work without having to use an iframe element. If a container is not specified, <code>EditorBase</code> creates and plugs an instance of Y.Frame, otherwise it uses the provided container (<a href="https://github.com/yui/yui3/issues/1041">#1041</a>). This is thanks to the work of <a href="https://github.com/ipeychev">Iliyan Peychev</a> and <a href="https://github.com/apipkin">Tony Pipkin</a>. Check out the <a href="http://stage.yuilibrary.com/yui/docs/examples/#component-editor">updated examples</a> on the staging site for implementation details. Note if you are already using Editor, there should be no changes needed for you to make, as it is backwards compatible.</p>
<h3>App Framework Improvements</h3>
<h4>Router</h4>
<p>Take note that several changes in <a href="http://stage.yuilibrary.com/yui/docs/router/index.html">Router</a> are not backwards compatible. These include a Router&rsquo;s <code>root</code> path is now enforced as its mount point. Routers with a specified <code>root</code> will only consider paths as matching its route handles if that path is semantically within the Router&rsquo;s <code>root</code> path (<a href="https://github.com/yui/yui3/issues/1083">#1083</a>). The <code>getPath()</code> method now returns the <em>full</em> current path, whereas before it returned the current path relative to the Router&rsquo;s <code>root</code>. This also affects <code>req.path</code> which is now the full path as well. Router&rsquo;s dispatching process has been changed to take <code>req</code> and <code>res</code> objects instead of creating them inside the <code>_dispatch()</code> method. This refactor also removed the deprecated support for calling <code>res()</code> as an alias for <code>next()</code>. Please take note of these changes as you may have to change the way you implement Router if you call these methods.</p>
<p>There were several other changes as well. Router now accepts route objects through its <code>route()</code> method. These route objects are the same as those specified in a Router&rsquo;s <code>routes</code> attribute and what Router uses for its internal storage of its routes. If these route objects contain a regular expression as their <code>path</code> or they contain a <code>regex</code> or <code>regexp</code> property, then they are considered fully-processed. Route objects can also contain any arbitrary metadata which will be preserved (<a href="https://github.com/yui/yui3/issues/1067">#1067</a>). Additional <code>req</code> attributes were added: <code>req.router</code> which is a reference to the Router instance, and <code>req.route</code> which is a reference to the current route object whose callbacks are being dispatched. Lastly, calling the <code>dispatch()</code> method will now set a <code>req.src</code> to <code>dispatch</code>.</p>
<h4>Model</h4>
<p>In <a href="http://stage.yuilibrary.com/yui/docs/model/">Y.Model</a>, <code>ModelSync.Local</code> was added which is an extension that provides a <code>sync()</code> implementation for <code>localStorage</code> that can be mixed into Models and ModelLists (<a href="https://github.com/yui/yui3/issues/1218">#1218</a>). You can find an example in the <a href="https://github.com/tastejs/todomvc/tree/gh-pages/architecture-examples/yui">YUI TodoMVC example app</a>.</p>
<h3>Button and Widget Changes</h3>
<p>The changes made in both <a href="http://stage.yuilibrary.com/yui/docs/button/">Button</a> and <a href="http://stage.yuilibrary.com/yui/docs/widget/">Widget</a> were in order to improve Y.Button. One long-standing issue was the problem of always having to wrap Button with a container element such as a div. In Widget, support was improved for having single-box widgets (where the &lsquo;bounding box&rsquo; was equivalent to the &lsquo;container box&rsquo;) by defaulting <code>boundingBox</code> to <code>srcNode</code> if <code>CONTENT_TEMPLATE</code> is null (<a href="https://github.com/yui/yui3/issues/1125">#1125</a>).</p>
<p>In support of this, in Y.Button a <code>labelHTML</code> attribute was added to <code>Y.ButtonCore</code> for nested HTML label support, and now Y.Button correctly retains all node attributes upon render. In the past, the node was recreated, and any custom attributes on the node would get destroyed.</p>
<h3>Calendar Updates</h3>
<p>Some fixes in <a href="http://stage.yuilibrary.com/yui/docs/calendar/">Calendar</a> include resolving an issue where one couldn&rsquo;t select a date when passing <code>minimumDate</code> (<a href="https://github.com/yui/yui3/issues/1030">#1030</a>), and removal of some superfluous strings from the Hungarian calendar translations (<a href="https://github.com/yui/yui3/issues/1054">#1054</a> &ndash; thanks <a href="https://github.com/drjayvee">Jeroen Versteeg </a>).</p>
<h3>DataTable Changes</h3>
<p><a href="http://stage.yuilibrary.com/yui/docs/datatable/">DataTable</a> has had a number of updates. A highlight module was added (<a href="https://github.com/yui/yui3/issues/1196">#1196</a>), improvements were made to the documentation and variable naming for better code understanding (<a href="https://github.com/yui/yui3/issues/946">#946</a> &ndash; thanks Satyam), <code>Show All</code> was added to language packs (<a href="https://github.com/yui/yui3/issues/1173">#1173</a>), a <code>contentUpdate</code>event was added to trigger after a DataTable has been updated from a <code>dataChange</code> event (<a href="https://github.com/yui/yui3/issues/1072">#1072</a>), and an issue was fixed with objects that were recursively nested being cloned infinitely (<a href="https://github.com/yui/yui3/issues/1008">#1008</a>).</p>
<p>In addition, an issue where <a href="http://stage.yuilibrary.com/yui/docs/api/modules/datatable-paginator.html">Paginator&rsquo;s</a> count would become out of sync with DataTable when DataTable data was added or removed (<a href="https://github.com/yui/yui3/issues/1011">#1011</a>), and a French language pack was added as well (<a href="https://github.com/yui/yui3/issues/1166">#1166</a>).</p>
<h3>Event, CustomEvent, and Event ValueChange Updates</h3>
<p>In <a href="http://stage.yuilibrary.com/yui/docs/event/">Event</a>, delegated focus and blur events now behave the same way other events do when a delegate sub from a container closer to the target calls <code>e.stopPropagation()</code>. Delegate subs from containers higher in the parent axis are not notified (<a href="https://github.com/yui/yui3/issues/1145">#1145</a>).</p>
<p>In <a href="http://stage.yuilibrary.com/yui/docs/api/classes/CustomEvent.html">CustomEvent</a>, <code>addTarget</code> and <code>removeTarget</code> are now chainable.</p>
<p><a href="http://stage.yuilibrary.com/yui/docs/api/classes/ValueChange.html">Event ValueChange</a> was updated to support <code>&lt;select&gt;</code> and <code>[contenteditable="true"]</code> elements as well (<a href="https://github.com/yui/yui3/issues/1184">#1184</a>).</p>
<h3>Updates in File</h3>
<p>YUI Community member <a href="https://github.com/jetfault">Jerry Reptak</a> added a check in <a href="http://stage.yuilibrary.com/yui/docs/api/classes/File.html">File</a> to make sure that the XHR exists before aborting (<a href="https://github.com/yui/yui3/issues/1053">#1053</a>).</p>
<h3>Graphics Change</h3>
<p>In <a href="http://stage.yuilibrary.com/yui/docs/graphics/">Graphics</a>, a fix was made for an issue involving elements being orphaned after <code>destroy()</code> being called (#1138).</p>
<h3>History Fixes</h3>
<p>The <a href="http://stage.yuilibrary.com/yui/docs/history/">History</a> module received some fixes including fixing a possible exception with <code>HistoryHTML5.init()</code> in IE10 (fixed by <a href="https://github.com/arielschiavoni">Ariel Schiavoni</a>), <a href="https://github.com/roblund">Rob Lund</a> added a workaround for a <code>replaceState</code> bug in Chrome/Webkit (<a href="https://github.com/yui/yui3/issues/1159">#1159</a>), and <a href="https://github.com/blzaugg">Byran Zaugg</a> fixed an issue with <code>parseHash</code> not parsing blank values in a hash string (<a href="https://github.com/yui/yui3/issues/1116">#1116</a>).</p>
<h3>Node and ScrollInfo Node Plugin Fixes</h3>
<p>In <a href="http://stage.yuilibrary.com/yui/docs/node/">Node</a>, pull request <a href="https://github.com/yui/yui3/issues/1169">#1169</a> fixed an issue with <code>inDoc</code> failing if Node was not bound to a DOM node. In the <a href="http://stage.yuilibrary.com/yui/docs/api/modules/node-scroll-info.html">Node plugin for ScrollInfo</a>, the methods <code>getOffsceenNodes()</code> and <code>getOnscreenNodes()</code> were fixed to avoid returning incorrect information in certain cases.</p>
<h3>Paginator Naming Fix</h3>
<p>In <a href="http://stage.yuilibrary.com/yui/docs/paginator/">Paginator</a>, a minor fix was done for a misspelling of Paginator in a NAME parameter.</p>
<h3>Transition Update</h3>
<p>In <a href="http://stage.yuilibrary.com/yui/docs/transition/">Transition</a>, an optional flag was added to NodeList.transition which, if true, fires the callback only once at the end of the NodeList transitions (<a href="https://github.com/yui/yui3/issues/880">#880</a> &ndash; thanks <a href="https://github.com/Perturbatio">Perturbatio</a>).</p>
<h3>Uploader Fix</h3>
<p>Jerry Reptak fixed another issue in <a href="http://stage.yuilibrary.com/yui/docs/uploader/">Uploader</a> involving an <code>uploadcancel</code> typo.</p>
<h3>YUI Core Update</h3>
<p>A new method under <a href="http://stage.yuilibrary.com/yui/docs/api/classes/Lang.html">Y.Lang</a>, called <code>Y.Lang.isRegExp()</code> was created.</p>
<h2>Removals and Deprecations</h2>
<p>Another theme of sorts for this release was deprecation and removal. We <a href="http://www.yuiblog.com/blog/2013/06/04/yui-3-10-2-released/#deprecations">deprecated SimpleYUI</a> a while back, and as of this release it is removed from the codebase. We also have <a href="https://groups.google.com/forum/#!topic/yui-contrib/_SaE7C8Asks">deprecated and removed</a> all of the Flash files from our repository. If you are looking to compile and host your own SWFs to include in YUI, you will need to visit the <a href="https://github.com/yui/yui3-swfs">yui3-swfs</a> repo to obtain the source files. Also removed was <a href="https://github.com/yui/yui3/pull/1117">widget-locale</a>, as it had been already deprecated almost 3 years ago.</p>
<p>New deprecations include the official <a href="https://github.com/yui/yui3/wiki/Deprecation-Policy">deprecation</a> of <a href="https://github.com/yui/phploader">PHP Loader</a> and <a href="https://github.com/yui/2in3">YUI 2in3</a>. These projects will no longer be supported and their features may removed from YUI in the future (as in the case for YUI 2in3).</p>
<h2>Additional Details</h2>
<p>We run over 8,700 tests for <a href="http://yuilibrary.com/yui/environments/">every target environment</a> with our internal CI system, so having a comprehensive set of tests for every feature is critical to maintaining our high standards for the quality in our codebase. If you are interested in contributing to YUI, consider taking on an <a href="https://github.com/yui/yui3/issues?direction=desc&amp;labels=up+for+grabs&amp;page=1&amp;sort=created&amp;state=open"><code>up-for-grabs</code></a> bug, write a test, or even simply file an <a href="https://github.com/yui/yui3/issues/new">issue</a>.</p>
<p>There were a total of 486 commits for this upcoming release by 17 contributors. You can read more about the details of this release candidate in the <a href="https://github.com/yui/yui3/wiki/YUI-3.13.0-Change-History-Rollup">Change History Rollup</a> and the <a href="https://github.com/yui/yui3/compare/v3.12.0...v3.13.0-rc-1">GitHub Comparison</a> to 3.12.0.</p></div>
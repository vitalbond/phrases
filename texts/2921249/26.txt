<div><p>Installing Archbang is WAY too easy, so you might wonder what to do next … here’s some ideas <img src="http://archlinux.me/axel668/wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley"></p>
<ol><li><strong>Optimize mirrorlist</strong> – the <a href="https://wiki.archlinux.org/index.php/Mirrors#Combined_listing_by_speed_and_status" target="_blank">Arch wiki</a> has a script that generates a mirror list sorted by speed and update status. Run the script and copy the result to <em>/etc/pacman.d/mirrorlist</em> (don’t forget to make a backup copy of the old list with all mirrors)</li>
<li><strong>Enable multilib</strong> – if you want to install 32 Bit binary packages (like e.g. printer drivers) you need to enable multilib support in <em>/etc/pacman.conf</em> – for details consult the <a href="https://wiki.archlinux.org/index.php/Multilib" target="_blank">Arch wiki</a></li>
<li><strong><strong>Install Pepper Flash</strong></strong> - unfortunately Adobe only supports Flash on Linux for Google, so get <a href="https://aur.archlinux.org/packages/google-chrome/" target="_blank">google-chrome</a> or <a href="https://aur.archlinux.org/packages/chromium-pepper-flash-stable/" target="_blank">chromium-pepper-flash-stable</a> from the AUR. It really makes a difference, especially on low end hardware like a netbook</li>
<li><strong>Install fonts</strong> - <a href="https://www.archlinux.org/packages/community/any/ttf-droid/" target="_blank">ttf-droid</a> and <a href="https://www.archlinux.org/packages/community/any/ttf-liberation/" target="_blank">ttf-liberation</a> will significantly improve the looks of your web pages (and Google docs). If you absolutely need Windows fonts, install <a href="https://aur.archlinux.org/packages/ttf-ms-fonts/" target="_blank">ttf-ms-fonts</a> and <a href="https://aur.archlinux.org/packages/ttf-vista-fonts/" target="_blank">ttf-vista-fonts</a> (the latter will extract newer MS fonts like Calibri from Powerpoint viewer)</li>
<li><strong>Lock on lid close</strong> – suspend works out of the box, but the computer isn’t locked. To fix this, you have to create a new <em>systemd</em> service that will be triggered on suspend / hibernate, as described in this <a href="http://azapps.de/systemd-slock-beim-wechseln-in-den-suspend-anschalten/" target="_blank">blog post</a> (<a href="http://translate.google.com/translate?hl=en&sl=auto&tl=en&u=http%3A%2F%2Fazapps.de%2Fsystemd-slock-beim-wechseln-in-den-suspend-anschalten%2F" target="_blank">translation here</a> - but copy the source code from the original post). After enabling the service with <em>systemctl enable slock</em> you laptop should lock on close. If not, you probably forgot to fill in your username instead of the placeholder</li>
<li><strong>Locking screensaver</strong> – to automatically lock your screen e.g. after 7 minutes, install <a href="https://www.archlinux.org/packages/community/x86_64/xautolock/" target="_blank">xautolock</a> and add the following line to your autostart.sh: <em>xautolock -time 7 -locker slock</em></li>
<li><strong>Sync clock</strong> – install <a href="https://www.archlinux.org/packages/extra/x86_64/ntp/" target="_blank">NTP</a> and enable with<em> sytemctl enable ntp</em> – now your clock should be synced over the internet</li>
<li><strong>Extend the menu</strong> – these 2 additional menu entries might come handy (use “execute” action in the graphical menu editor) …<br>
- Refresh Application Menu: <em>bash -c “(openbox-menu -p -o abapps.xml -t ‘lxterminal -e’) & (sleep 3 && killall -e openbox-menu) &”<br></em>(works without the ‘kill’, but you end up with a lot of openbox-menu processes over time)<br>
- Restart tint2: <em>bash -c “(killall -e tint2) && (sleep 1s && tint2) &”</em></li>
<li><strong>Logout with Super+X</strong> – if you are an old Chrunchbang user like me, you don’t want to miss the <em>Super+X</em> shortcut for logout – you can easily configure this using the graphical menu editor from the <em>Preferences/Openbox</em> menu, and change the execute- action to <em>oblogout</em>. The desktop help text can be changed in <em>~/.conkyrc</em></li>
<li><strong>Install pcmanfm</strong> – spacefm might be a great file manager, but after accidentally deleting my home directory while trying to remove a favorite, I decided to go back to <a href="https://www.archlinux.org/packages/community/x86_64/pcmanfm/" target="_blank">pcmanfm</a>. After installing, you have to change the Super+F shortcut with the <em>Keyboard Editor</em> from the <em>Preferences/Openbox</em> menu. To enable auto mount for USB sticks etc., add the following line to your <em>autostart</em> file: <em>dbus-launch pcmanfm -d –no-desktop &</em></li>
</ol><div>That’s it, should be enough to get you started. There’s always room for improvement, and an Arch system is never really finished anyway, so be creative (and share your ideas in a comment, if you like).</div></div>